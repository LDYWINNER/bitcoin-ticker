{"version":3,"sources":["routes/api.ts","atoms.ts","routes/Coins.tsx","routes/Price.tsx","routes/Chart.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","isDarkAtom","atom","key","default","Container","styled","div","Header","CoinsList","ul","Coin","li","props","theme","bgColor","accentColor","textColor","Title","h1","Loader","span","Img","img","Coins","setDarkAtom","useSetRecoilState","useQuery","isLoading","data","Helmet","onClick","prev","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Overview","OverviewItem","Price","coinId","tickersData","quotes","USD","price","toFixed","ath_date","ath_price","market_cap","market_cap_change_24h","percent_change_12h","percent_change_15m","percent_change_1h","percent_change_1y","percent_change_24h","percent_change_30d","percent_change_30m","percent_change_6h","percent_from_price_ath","volume_24h","volume_24h_change_24h","Chart","isDark","useRecoilValue","fetchCoinHistory","refetchInterval","type","series","x","time_close","y","open","high","low","close","options","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","categories","fill","gradient","gradientToColors","stops","colors","tooltip","formatter","value","Description","p","Tabs","Tab","isActive","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","loading","rank","description","total_supply","max_supply","path","Router","basename","darkTheme","lightTheme","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.fb907be1.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`\n\nexport function fetchCoins() {\n    return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n};\n\nexport function fetchCoinInfo(coinId: string) {\n    return fetch(`${BASE_URL}/coins/${coinId}`).then((response) => response.json());\n};\n\nexport function fetchCoinTickers(coinId: string) {\n    return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) => response.json());\n};\n\nexport function fetchCoinHistory(coinId: string) {\n    return fetch(\n        `https://ohlcv-api.nomadcoders.workers.dev/?coinId=${coinId}`\n    ).then((response) => response.json());\n};","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n    key: \"isDark\",\n    default: false,\n});","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { fetchCoins } from \"./api\";\nimport { useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\nconst Container = styled.div`\n    padding: 60px 20px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Header = styled.div`\n    height: 10vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n    background-color: ${props => props.theme.bgColor};\n    border: 1px solid ${props => props.theme.accentColor};\n    color: ${props => props.theme.textColor};\n    border-radius: 15px;\n    margin-bottom: 10px;\n    a {\n        display: flex;\n        align-items: center;\n        padding: 20px;\n        transition: color 0.2s ease-in;\n    }\n    &:hover{\n        a {\n            color: ${props => props.theme.accentColor};\n        }\n    }\n`;\n\nconst Title = styled.h1`\n    font-size: 48px;\n    color: ${(props) => props.theme.accentColor};\n    padding-bottom: 50px;\n`;\n\nconst Loader = styled.span`\n    text-align: center;\n    display: block;\n`;\n\nconst Img = styled.img`\n    width: 40px;\n    height: 40px;\n    margin-right: 10px;\n`;\n\ninterface ICoin {\n    id: string,\n    name: string,\n    symbol: string,\n    rank: number,\n    is_new: boolean,\n    is_active: boolean,\n    type: string,\n};\n\nfunction Coins() {\n    const setDarkAtom = useSetRecoilState(isDarkAtom);\n    const toggleDarkAtom = () => setDarkAtom((prev) => !prev);\n    const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n    return (\n        <Container>\n            <Helmet>\n                <title>코인</title>\n            </Helmet>\n            <Header>\n                <Title>코인</Title>\n                <button onClick={toggleDarkAtom}>Toggle Mode</button>\n            </Header>\n            {isLoading ? <Loader>Loading...</Loader> : (\n                <CoinsList>\n                    {data?.slice(0, 100).map((coin) => (\n                        <Coin key={coin.id}>\n                            <Link to={{\n                                pathname: `/${coin.id}`,\n                                state: { name: coin.name },\n                            }}>\n                                <Img src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\n                                {coin.name} &rarr;\n                            </Link >\n                        </Coin>\n                    ))}\n                </CoinsList>\n            )}\n        </Container>\n    );\n};\n\nexport default Coins;","import styled from \"styled-components\";\n\nconst Overview = styled.div`\n    display: flex;\n    justify-content: space-between;\n    background-color: rgba(0, 0, 0, 0.5);\n    padding: 10px 40px;\n    border-radius: 10px;\n    margin-bottom: 20px;\n`;\nconst OverviewItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n};\n\ninterface PriceProps {\n    coinId: string;\n    tickersData?: PriceData;\n};\n\n\nfunction Price({ coinId, tickersData }: PriceProps) {\n    return (\n        <>\n            <Overview>\n                <OverviewItem>\n                    <h4>Price:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>${tickersData?.quotes.USD.price.toFixed(2)}</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>ath date:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.ath_date}</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>ath price:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.ath_price}</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>market cap:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.market_cap}</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>market cap change 24h:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.market_cap_change_24h}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 12h:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_12h}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 15m:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_15m}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 1h:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_1h}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 1y:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_1y}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 24h:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_24h}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 30d:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_30d}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 30m:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_30m}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent change in 6h:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_change_6h}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>percent from price ath:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.percent_from_price_ath}%</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>volume in 24h:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.volume_24h}</span>\n                </OverviewItem>\n            </Overview>\n            <Overview>\n                <OverviewItem>\n                    <h4>volume change in 24h:</h4>\n                </OverviewItem>\n                <OverviewItem>\n                    <span>{tickersData?.quotes.USD.volume_24h_change_24h}%</span>\n                </OverviewItem>\n            </Overview>\n        </>\n    )\n}\n\nexport default Price;","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"./api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"../atoms\";\n\ninterface IHistorical {\n    time_open: number;\n    time_close: number;\n    open: string;\n    high: string;\n    low: string;\n    close: string;\n    volume: string;\n    market_cap: number;\n}\n\ninterface ChartProps {\n    coinId: string;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n    const isDark = useRecoilValue(isDarkAtom);\n    const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () => fetchCoinHistory(coinId), {\n        refetchInterval: 5000,\n    });\n    return <div>{isLoading ? \"Loading chart...\" : <ApexChart\n        type=\"candlestick\"\n        series={[\n            {\n                name: \"Price\",\n                data: data?.map((price) => ({\n                    x: price.time_close,\n                    y: [price.open, price.high, price.low, price.close],\n                })) ?? [],\n            },\n        ]}\n        options={{\n            theme: {\n                mode: isDark ? \"dark\" : \"light\",\n            },\n            chart: {\n                height: 300,\n                width: 500,\n                toolbar: {\n                    show: false,\n                },\n                background: \"transparent\",\n            },\n            grid: {\n                show: false,\n            },\n            stroke: {\n                curve: \"smooth\",\n                width: 3,\n            },\n            yaxis: {\n                show: false,\n            },\n            xaxis: {\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false,\n                },\n                type: \"datetime\",\n                categories: data?.map((price) => price.time_close),\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n                y: {\n                    formatter: (value) => `$${value.toFixed(2)}`,\n                }\n            }\n        }}\n    />}\n    </div>\n}\n\nexport default Chart;","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation, useParams, useRouteMatch, Switch, Route, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Price from \"./Price\";\nimport Chart from \"./Chart\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"./api\";\n\nconst Container = styled.div`\n    padding: 60px 20px;\n    max-width: 480px;\n    margin: 0 auto;\n`;\n\nconst Header = styled.div`\n    height: 10vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Title = styled.h1`\n    font-size: 48px;\n    color: ${(props) => props.theme.accentColor};\n    padding-bottom: 50px;\n`;\n\nconst Loader = styled.span`\n    text-align: center;\n    display: block;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n        props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n    coinId: string;\n};\n\ninterface RouteState {\n    name: string;\n};\n\ninterface InfoData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    is_new: boolean;\n    is_active: boolean;\n    type: string;\n    description: string;\n    message: string;\n    open_source: boolean;\n    started_at: string;\n    development_status: string;\n    hardware_wallet: boolean;\n    proof_type: string;\n    org_structure: string;\n    hash_algorithm: string;\n    first_data_at: string;\n    last_data_at: string;\n}\n\ninterface PriceData {\n    id: string;\n    name: string;\n    symbol: string;\n    rank: number;\n    circulating_supply: number;\n    total_supply: number;\n    max_supply: number;\n    beta_value: number;\n    first_data_at: string;\n    last_updated: string;\n    quotes: {\n        USD: {\n            ath_date: string;\n            ath_price: number;\n            market_cap: number;\n            market_cap_change_24h: number;\n            percent_change_1h: number;\n            percent_change_1y: number;\n            percent_change_6h: number;\n            percent_change_7d: number;\n            percent_change_12h: number;\n            percent_change_15m: number;\n            percent_change_24h: number;\n            percent_change_30d: number;\n            percent_change_30m: number;\n            percent_from_price_ath: number;\n            price: number;\n            volume_24h: number;\n            volume_24h_change_24h: number;\n        };\n    };\n}\n\nfunction Coin() {\n    const { coinId } = useParams<RouteParams>();\n    const { state } = useLocation<RouteState>();\n    const priceMatch = useRouteMatch(\"/:coinId/price\");\n    const chartMatch = useRouteMatch(\"/:coinId/chart\");\n    const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\n    const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId), {\n        refetchInterval: 5000,\n    });\n    const loading = infoLoading || tickersLoading;\n    return <Container>\n        <Helmet>\n            <title>{state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}</title>\n        </Helmet>\n        <Header>\n            <Title>\n                {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n            </Title>\n            <Link to={{\n                pathname: `/`\n            }}>\n                <button>Home</button>\n            </Link >\n        </Header>\n        {loading ? (\n            <Loader>Loading...</Loader>\n        ) : (\n            <>\n                <Overview>\n                    <OverviewItem>\n                        <span>Rank:</span>\n                        <span>{infoData?.rank}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>Symbol:</span>\n                        <span>${infoData?.symbol}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>Price:</span>\n                        <span>${tickersData?.quotes.USD.price.toFixed(2)}</span>\n                    </OverviewItem>\n                </Overview>\n                <Description>{infoData?.description}</Description>\n                <Overview>\n                    <OverviewItem>\n                        <span>Total Suply:</span>\n                        <span>{tickersData?.total_supply}</span>\n                    </OverviewItem>\n                    <OverviewItem>\n                        <span>Max Supply:</span>\n                        <span>{tickersData?.max_supply}</span>\n                    </OverviewItem>\n                </Overview>\n\n                <Tabs>\n                    <Tab isActive={chartMatch !== null}>\n                        <Link to={`/${coinId}/chart`}>Chart</Link>\n                    </Tab>\n                    <Tab isActive={priceMatch !== null}>\n                        <Link to={`/${coinId}/price`}>Price</Link>\n                    </Tab>\n                </Tabs>\n\n                <Switch>\n                    <Route path={`/:coinId/price`}>\n                        <Price tickersData={tickersData} coinId={coinId} />\n                    </Route>\n                    <Route path={`/:coinId/chart`}>\n                        <Chart coinId={coinId} />\n                    </Route>\n                </Switch>\n            </>\n        )}\n    </Container>;\n};\n\nexport default Coin;","import { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\n\nfunction Router() {\n    return <HashRouter basename=\"/bitcoin-ticker\">\n        <Switch>\n            <Route path=\"/:coinId\">\n                <Coin />\n            </Route>\n            <Route path=\"/\">\n                <Coins />\n            </Route>\n        </Switch>\n    </HashRouter>\n}\n\nexport default Router;","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n    bgColor: \"#2f3640\",\n    textColor: \"whitesmoke\",\n    accentColor: \"#4cd137\",\n};\n\nexport const lightTheme: DefaultTheme = {\n    bgColor: \"whitesmoke\",\n    textColor: \"black\",\n    accentColor: \"#4cd137\",\n};","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color: ${(props) => props.theme.textColor};\n}\na {\n  text-decoration: none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}